name: Release Binaries

permissions: {}

on:
  release:
    types: [published]

defaults:
  run:
    shell: bash

jobs:
  upload-assets:
    name: ${{ matrix.target }}
    if: github.repository_owner == 'Boshen'
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
          - target: aarch64-unknown-linux-musl
          - target: aarch64-apple-darwin
            os: macos-13
          - target: aarch64-pc-windows-msvc
            os: windows-2019
          - target: x86_64-unknown-linux-gnu
          - target: x86_64-unknown-linux-musl
          - target: x86_64-apple-darwin
            os: macos-13
          - target: x86_64-pc-windows-msvc
            os: windows-2019
          - target: x86_64-unknown-freebsd
          - target: universal-apple-darwin
            os: macos-13
    runs-on: ${{ matrix.os || 'ubuntu-20.04' }}
    timeout-minutes: 60
    env:
      SHEAR_VERSION: ${{ github.ref }}
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1

      - name: Install Rust
        uses: moonrepo/setup-rust@e013866c4215f77c925f42f60257dec7dd18836e # v1

      - uses: taiki-e/setup-cross-toolchain-action@dd27a7558a45f6b00c1098e61fa074a038c287f6 # v1
        with:
          target: ${{ matrix.target }}

      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >>"${GITHUB_ENV}"
        if: contains(matrix.target, '-windows-msvc')

      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static -C link-self-contained=yes" >>"${GITHUB_ENV}"
        if: contains(matrix.target, '-linux-musl')

      - uses: taiki-e/upload-rust-binary-action@e7953b6078194a4ae5f5619632e3715db6275561 # v1
        with:
          bin: cargo-shear
          target: ${{ matrix.target }}
          tar: all
          zip: windows
          token: ${{ secrets.GITHUB_TOKEN }}
